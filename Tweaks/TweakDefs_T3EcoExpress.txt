!bSet tweakdefs4 LS1UMyBFY28gRXhwcmVzcyAoWm9wKQpsb2NhbCB1RGVmcyA9IFVuaXREZWZzIG9yIHt9CmxvY2FsIGNwcyA9ICdjdXN0b21wYXJhbXMnCmxvY2FsIGZkcyA9ICdmZWF0dXJlZGVmcycKCmxvY2FsIHR3ZWFrVDNBZnVzID0gdHJ1ZQpsb2NhbCB0d2Vha1QzQ29udiA9IHRydWUKCmxvY2FsIGZ1bmN0aW9uIHJvdW5kMTAobikKCXJldHVybiBtYXRoLmZsb29yKG4gKiAwLjEpICogMTAKZW5kCgpsb2NhbCBmdW5jdGlvbiBybXZCTyhidWlsZGVySUQsIGlkKQoJbG9jYWwgYkRlZiA9IFVuaXREZWZzW2J1aWxkZXJJRF0KCWxvY2FsIHVEZWYgPSBVbml0RGVmc1tpZF0KCWlmIGJEZWYgYW5kIHVEZWYgdGhlbgoJCWZvciBrLCB2IGluIHBhaXJzKGJEZWYuYnVpbGRvcHRpb25zKSBkbwoJCQlpZiB2ID09IGlkIHRoZW4KCQkJCXRhYmxlLnJlbW92ZShiRGVmLmJ1aWxkb3B0aW9ucywgaykKCQkJCWJyZWFrCgkJCWVuZAoJCWVuZAoJZW5kCmVuZAoKbG9jYWwgZnVuY3Rpb24gbWVyZ2VNYXAobCwgcikKCWZvciBrLCB2IGluIHBhaXJzKHIpIGRvCgkJbFtrXSA9IHYKCWVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIG1lcmdlTWFwUmVjKGwsIHIpCglmb3IgaywgdiBpbiBwYWlycyhyKSBkbwoJCWlmIHR5cGUodikgPT0gJ3RhYmxlJyB0aGVuCgkJCWxvY2FsIGxrID0gbFtrXSBvciB7fQoJCQltZXJnZU1hcFJlYyhsaywgdik7CgkJCWxba10gPSBsawoJCWVsc2UKCQkJbFtrXSA9IHYKCQllbmQKCWVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIHJlbW9kZWwoZGVmLCBuYW1lLCBoYXNEZWFkLCBoYXNEZWNhbCkKCWlmIGRlZiB0aGVuCgkJZGVmLmJ1aWxkcGljID0gbmFtZS4uJy5ERFMnCgkJZGVmLm9iamVjdG5hbWUgPSAnVW5pdHMvJy4ubmFtZS4uJy5zM28nCgkJZGVmLnNjcmlwdCA9ICdVbml0cy8nLi5uYW1lLi4nLmNvYicKCQlpZiBoYXNEZWFkIHRoZW4KCQkJZGVmW2Zkc10uZGVhZC5vYmplY3QgPSAnVW5pdHMvJy4uc3RyaW5nLmxvd2VyKG5hbWUpLi4nX2RlYWQuczNvJwoJCWVuZAoJCWlmIGhhc0RlY2FsIHRoZW4KCQkJZGVmW2Nwc10uYnVpbGRpbmdncm91bmRkZWNhbHR5cGUgPSAnZGVjYWxzLycuLnN0cmluZy5sb3dlcihuYW1lKS4uJ19hb3BsYW5lLmRkcycKCQllbmQKCWVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIHNldERlc2MoZGVmLCBuYW1lLCB0aXApCglsb2NhbCBsYXRpbiA9IHsnZW4nLCdmcicsJ2RlJ30KCWlmIGRlZiB0aGVuCgkJZm9yIGkgPSAxLCAjbGF0aW4gZG8KCQkJaWYgbmFtZSB0aGVuCgkJCQlkZWZbY3BzXVsnaTE4bl8nLi5sYXRpbltpXS4uJ19odW1hbm5hbWUnXSA9IG5hbWUKCQkJZW5kCgkJCWlmIHRpcCB0aGVuCgkJCQlkZWZbY3BzXVsnaTE4bl8nLi5sYXRpbltpXS4uJ190b29sdGlwJ10gPSB0aXAKCQkJZW5kCgkJZW5kCgllbmQKZW5kCgotLURlY2x1dHRlciBBcm1hZGEuCnJtdkJPKCdhcm1hY2EnLCAnYXJtY2tmdXMnKQpybXZCTygnYXJtYWNrJywgJ2FybWNrZnVzJykKcm12Qk8oJ2FybWFjdicsICdhcm1ja2Z1cycpCgotLUFmdXMgZmFjdGlvbiBhdHRyaWJ1dGVzIGFuZCBpY29uLgppZiB0d2Vha1QzQWZ1cyB0aGVuCglsb2NhbCB0M0hQTXVsID0gMS41Cglsb2NhbCB0aW1lTXVsID0gNQoJbG9jYWwgY29zdE11bCA9IDEwCglsb2NhbCBhQUZ1c0RlZiA9IHVEZWZzWydhcm1hZnVzJ10KCWxvY2FsIGNBRnVzRGVmID0gdURlZnNbJ2NvcmFmdXMnXQoJbG9jYWwgbEFGdXNEZWYgPSB1RGVmc1snbGVnYWZ1cyddCglsb2NhbCBhVDNGdXMgPSAnYXJtYWZ1c3QzJwoJbG9jYWwgY1QzRnVzID0gJ2NvcmFmdXN0MycKCWxvY2FsIGxUM0Z1cyA9ICdsZWdhZnVzdDMnCglsb2NhbCBhVDNGdXNEZWYgPSB1RGVmc1thVDNGdXNdCglsb2NhbCBjVDNGdXNEZWYgPSB1RGVmc1tjVDNGdXNdCglsb2NhbCBsVDNGdXNEZWYgPSB1RGVmc1tsVDNGdXNdCglsb2NhbCBocCA9ICdoZWFsdGgnCglhVDNGdXNEZWZbaHBdID0gYUFGdXNEZWZbaHBdICogdDNIUE11bAoJY1QzRnVzRGVmW2hwXSA9IGNBRnVzRGVmW2hwXSAqIHQzSFBNdWwKCWxUM0Z1c0RlZltocF0gPSBsQUZ1c0RlZltocF0gKiB0M0hQTXVsCglsb2NhbCBidCA9ICdidWlsZHRpbWUnCglhVDNGdXNEZWZbYnRdID0gYUFGdXNEZWZbYnRdICogdGltZU11bAoJY1QzRnVzRGVmW2J0XSA9IGNBRnVzRGVmW2J0XSAqIHRpbWVNdWwKCWxUM0Z1c0RlZltidF0gPSBsQUZ1c0RlZltidF0gKiB0aW1lTXVsCglsb2NhbCBtYyA9ICdtZXRhbGNvc3QnCglhVDNGdXNEZWZbbWNdID0gYUFGdXNEZWZbbWNdICogY29zdE11bAoJY1QzRnVzRGVmW21jXSA9IGNBRnVzRGVmW21jXSAqIGNvc3RNdWwKCWxUM0Z1c0RlZlttY10gPSBsQUZ1c0RlZlttY10gKiBjb3N0TXVsCglsb2NhbCBlYyA9ICdlbmVyZ3ljb3N0JwoJYVQzRnVzRGVmW2VjXSA9IGFBRnVzRGVmW2VjXSAqIGNvc3RNdWwKCWNUM0Z1c0RlZltlY10gPSBjQUZ1c0RlZltlY10gKiBjb3N0TXVsCglsVDNGdXNEZWZbZWNdID0gbEFGdXNEZWZbZWNdICogY29zdE11bAoJbG9jYWwgZW0gPSAnZW5lcmd5bWFrZScKCWFUM0Z1c0RlZltlbV0gPSBhQUZ1c0RlZltlbV0gKiBjb3N0TXVsCgljVDNGdXNEZWZbZW1dID0gY0FGdXNEZWZbZW1dICogY29zdE11bAoJbFQzRnVzRGVmW2VtXSA9IGxBRnVzRGVmW2VtXSAqIGNvc3RNdWwKCWFUM0Z1c0RlZi5lbmVyZ3lzdG9yYWdlID0gYUFGdXNEZWYuZW5lcmd5c3RvcmFnZSAqIGNvc3RNdWwgKiAxLjUKCXNldERlc2MobFQzRnVzRGVmLCBuaWwsICdQcm9kdWNlcyAnLi5sVDNGdXNEZWZbZW1dLi4nIEVuZXJneSAoSGF6YXJkb3VzKScpCglsb2NhbCBicCA9ICdvdGhlci9yZXNvdXJjZWNoZWF0LmRkcycKCWFUM0Z1c0RlZi5idWlsZHBpYyA9IGJwCgljVDNGdXNEZWYuYnVpbGRwaWMgPSBicAoJbFQzRnVzRGVmLmJ1aWxkcGljID0gYnAKZW5kCgotLUNvbnZlcnRlciBzaXplIGFuZCBwcmljZSByZWR1Y3Rpb24uCmlmIHR3ZWFrVDNDb252IHRoZW4KCWxvY2FsIHRpbWVNdWwgPSA1Cglsb2NhbCBjb3N0TXVsID0gMTAKCWxvY2FsIGNvbkRlZiA9IHVEZWZzWydjb3JtbWtyJ10KCWxvY2FsIGFUM0MgPSAnYXJtbW1rcnQzJwoJbG9jYWwgY1QzQyA9ICdjb3JtbWtydDMnCglsb2NhbCBsVDNDID0gJ2xlZ2FkdmVjb252dDMnCglsb2NhbCBhVDNDRGVmID0gdURlZnNbYVQzQ10KCWxvY2FsIGNUM0NEZWYgPSB1RGVmc1tjVDNDXQoJbG9jYWwgbFQzQ0RlZiA9IHVEZWZzW2xUM0NdCglsb2NhbCB0M0NvbktWUCA9IHsKCQlidWlsZHRpbWUgPSBjb25EZWYuYnVpbGR0aW1lICogdGltZU11bCwKCQltZXRhbGNvc3QgPSByb3VuZDEwKGNvbkRlZi5tZXRhbGNvc3QgKiBjb3N0TXVsICogKGNUM0NEZWZbY3BzXS5lbmVyZ3ljb252X2VmZmljaWVuY3kgLyBjb25EZWZbY3BzXS5lbmVyZ3ljb252X2VmZmljaWVuY3kpKSwKCQllbmVyZ3ljb3N0ID0gY29uRGVmLmVuZXJneWNvc3QgKiBjb3N0TXVsLAoJCWZvb3RwcmludHggPSA1LAoJCWZvb3RwcmludHogPSA1LAoJCWV4cGxvZGVhcyA9ICdmdXNpb25FeHBsb3Npb24nLAoJCXNlbGZkZXN0cnVjdGFzID0gJ2Z1c2lvbkV4cGxvc2lvblNlbGZkJywKCQl5YXJkbWFwID0gJ3lvb295IG9vb29vIG9vb29vIG9vb29vIHlvb295JwoJfQoJbG9jYWwgdDNDb25DUGFyID0gewoJCWJ1aWxkaW5nZ3JvdW5kZGVjYWxzaXpleCA9IDUsCgkJYnVpbGRpbmdncm91bmRkZWNhbHNpemV5ID0gNQoJfQoJbG9jYWwgdDNDb25GRFNEZWFkID0gewoJCWRhbWFnZSA9IGFUM0NEZWYuaGVhbHRoICogMC41NDUsCgkJbWV0YWwgPSBhVDNDRGVmLm1ldGFsY29zdCAqIDAuNTc1LAoJCWZvb3RwcmludHggPSA1LAoJCWZvb3RwcmludHogPSA1LAoJCWhlaWdodCA9IDIwCgl9Cglsb2NhbCB0M0NvbkZEU0hlYXAgPSB7CgkJZGFtYWdlID0gYVQzQ0RlZi5oZWFsdGggKiAwLjI3NSwKCQltZXRhbCA9IGFUM0NEZWYubWV0YWxjb3N0ICogMC4yMjUsCgkJZm9vdHByaW50eCA9IDUsCgkJZm9vdHByaW50eiA9IDUsCgkJaGVpZ2h0ID0gNCwKCQlvYmplY3QgPSAnVW5pdHMvY29yNVg1QS5zM28nCgl9CgktLUFybSBzaGFyZWQgcGFzcy4KCW1lcmdlTWFwKGFUM0NEZWYsIHQzQ29uS1ZQKQoJbWVyZ2VNYXAoYVQzQ0RlZltjcHNdLCB0M0NvbkNQYXIpCgltZXJnZU1hcChhVDNDRGVmW2Zkc10uZGVhZCwgdDNDb25GRFNEZWFkKQoJbWVyZ2VNYXAoYVQzQ0RlZltmZHNdLmhlYXAsIHQzQ29uRkRTSGVhcCkKCS0tQ29yCgltZXJnZU1hcFJlYyhjVDNDRGVmLCBhVDNDRGVmKQoJcmVtb2RlbChjVDNDRGVmLCAnQ09SVVdNTU0nLCB0cnVlLCB0cnVlKQoJLS1MZWcKCW1lcmdlTWFwUmVjKGxUM0NEZWYsIGFUM0NEZWYpCglyZW1vZGVsKGxUM0NEZWYsICdDT1JVV0ZVUycsIHRydWUsIHRydWUpCgktLUFybSB1bmlxdWUgcGFzcy4KCWxvY2FsIGZvb3QgPSB7IGZvb3RwcmludHggPSA2LCBmb290cHJpbnR6ID0gNCB9CgltZXJnZU1hcChhVDNDRGVmLCBmb290KQoJbWVyZ2VNYXAoYVQzQ0RlZltmZHNdLmRlYWQsIGZvb3QpCgltZXJnZU1hcChhVDNDRGVmW2Zkc10uaGVhcCwgZm9vdCkKCXJlbW9kZWwoYVQzQ0RlZiwgJ0FSTVVXRlVTJywgdHJ1ZSwgdHJ1ZSkKCWFUM0NEZWYueWFyZG1hcCA9ICdvb29vb28gb29vb29vIG9vb29vbyBvb29vb28nCmVuZA